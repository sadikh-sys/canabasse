generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  name      String
  email     String      @unique
  password  String
  phone     String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  payments  Payment[]
  tracks    UserTrack[]

  @@map("users")
}

model Track {
  id        Int         @id @default(autoincrement())
  title     String
  artist    String
  price     Float
  fileUrl   String
  duration  Int?
  coverUrl  String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  users     UserTrack[]

  @@map("tracks")
}

model UserTrack {
  id               Int      @id @default(autoincrement())
  userId           Int
  trackId          Int
  remainingListens Int      @default(10)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  track            Track    @relation(fields: [trackId], references: [id], onDelete: Cascade)
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, trackId])
  @@map("user_tracks")
}

model Payment {
  id            Int      @id @default(autoincrement())
  userId        Int
  amount        Float
  status        String
  transactionId String   @unique
  trackId       Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("payments")
}
